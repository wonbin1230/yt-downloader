{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended"
    ],
    "ignorePatterns": ["vite.config.ts"],
    "overrides": [
        {
            "files": [
                "**/*.ts"
            ],
            "extends": [
                "plugin:@typescript-eslint/recommended"
            ],
            "parser": "@typescript-eslint/parser",
            "plugins": [
                "@typescript-eslint"
            ],
            "rules": {
                "no-console": "off",
                "@typescript-eslint/method-signature-style": "error",
                "@typescript-eslint/switch-exhaustiveness-check": "error",
                "@typescript-eslint/prefer-string-starts-ends-with": "error",
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/prefer-includes": "error",
                "@typescript-eslint/no-unused-vars": "off",
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-duplicate-type-constituents": "error",
                "@typescript-eslint/no-base-to-string": "error",
                "@typescript-eslint/no-unsafe-return": "error",
                "@typescript-eslint/no-unsafe-assignment": "error",
                "@typescript-eslint/no-unnecessary-type-constraint": "error",
                "@typescript-eslint/no-empty-interface": "error",
                "@typescript-eslint/no-empty-function": "error",
                "@typescript-eslint/no-import-type-side-effects": "error",
                "@typescript-eslint/no-useless-empty-export": "error",
                "@typescript-eslint/explicit-function-return-type": "off",
                "@typescript-eslint/consistent-type-definitions": "error",
                "@typescript-eslint/consistent-type-exports": "error",
                "@typescript-eslint/consistent-type-imports": "error",
                "@typescript-eslint/typedef": [
                    "off",
                    {
                        "arrayDestructuring": true,
                        "arrowParameter": true,
                        "memberVariableDeclaration": true,
                        "objectDestructuring": true,
                        "parameter": true,
                        "propertyDeclaration": true,
                        "variableDeclaration": true,
                        "variableDeclarationIgnoreFunction": true
                    }
                ],
                "@typescript-eslint/member-ordering": [
                    "error",
                    {
                        "default": [
                            "signature",
                            "field",
                            "constructor",
                            "method"
                        ]
                    }
                ],
                "@typescript-eslint/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {
                            "delimiter": "comma",
                            "requireLast": true
                        },
                        "singleline": {
                            "delimiter": "comma",
                            "requireLast": false
                        },
                        "multilineDetection": "brackets"
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "default",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "variableLike",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "variable",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "variable",
                        "format": null,
                        "modifiers": [
                            "destructured"
                        ]
                    },
                    {
                        "selector": "classProperty",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ],
                        "leadingUnderscore": "allowSingleOrDouble"
                    },
                    {
                        "selector": "parameter",
                        "format": [
                            "camelCase"
                        ],
                        "leadingUnderscore": "allow"
                    },
                    {
                        "selector": "memberLike",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "typeLike",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "typeParameter",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "interface",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "objectLiteralProperty",
                        "format": null
                    }
                ]
            }
        },
        {
            "files": [
                "**/*.tsx"
            ],
            "extends": [
                "plugin:@typescript-eslint/recommended"
            ],
            "parser": "@typescript-eslint/parser",
            "plugins": [
                "@typescript-eslint"
            ],
            "rules": {
                "no-console": "off",
                "@typescript-eslint/method-signature-style": "error",
                "@typescript-eslint/switch-exhaustiveness-check": "error",
                "@typescript-eslint/prefer-string-starts-ends-with": "error",
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/prefer-includes": "error",
                "@typescript-eslint/no-unused-vars": "off",
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-duplicate-type-constituents": "error",
                "@typescript-eslint/no-base-to-string": "error",
                "@typescript-eslint/no-unsafe-return": "error",
                "@typescript-eslint/no-unsafe-assignment": "error",
                "@typescript-eslint/no-unnecessary-type-constraint": "error",
                "@typescript-eslint/no-empty-interface": "error",
                "@typescript-eslint/no-empty-function": "error",
                "@typescript-eslint/no-import-type-side-effects": "error",
                "@typescript-eslint/no-useless-empty-export": "error",
                "@typescript-eslint/explicit-function-return-type": "off",
                "@typescript-eslint/consistent-type-definitions": "error",
                "@typescript-eslint/consistent-type-exports": "error",
                "@typescript-eslint/consistent-type-imports": "error",
                "@typescript-eslint/typedef": [
                    "off",
                    {
                        "arrayDestructuring": true,
                        "arrowParameter": true,
                        "memberVariableDeclaration": true,
                        "objectDestructuring": true,
                        "parameter": true,
                        "propertyDeclaration": true,
                        "variableDeclaration": true,
                        "variableDeclarationIgnoreFunction": true
                    }
                ],
                "@typescript-eslint/member-ordering": [
                    "error",
                    {
                        "default": [
                            "signature",
                            "field",
                            "constructor",
                            "method"
                        ]
                    }
                ],
                "@typescript-eslint/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {
                            "delimiter": "comma",
                            "requireLast": true
                        },
                        "singleline": {
                            "delimiter": "comma",
                            "requireLast": false
                        },
                        "multilineDetection": "brackets"
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "default",
                        "format": [
                            "camelCase",
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "variableLike",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "variable",
                        "format": [
                            "camelCase",
                            "UPPER_CASE",
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "variable",
                        "format": null,
                        "modifiers": [
                            "destructured"
                        ]
                    },
                    {
                        "selector": "classProperty",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ],
                        "leadingUnderscore": "allowSingleOrDouble"
                    },
                    {
                        "selector": "parameter",
                        "format": [
                            "camelCase"
                        ],
                        "leadingUnderscore": "allow"
                    },
                    {
                        "selector": "memberLike",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "typeLike",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "typeParameter",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "interface",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "objectLiteralProperty",
                        "format": null
                    }
                ]
            }
        }
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "react"
    ],
    "rules": {
        "no-unused-vars": "off",
        "no-empty-function": "error",
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 1,
                "maxBOF": 0,
                "maxEOF": 0
            }
        ],
        "curly": "error",
        "brace-style": [
            "error",
            "stroustrup"
        ],
        "eqeqeq": "error",
        "quotes": [
            "error",
            "double"
        ],
        "semi": [
            "error",
            "always"
        ],
        "dot-notation": [
            "error"
        ],
        "react/display-name": "error"
    }
}
